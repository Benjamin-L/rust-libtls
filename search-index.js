var N=null,E="",T="t",U="u",searchIndex={};
var R=["tv_sec","__high","__size","__align","__data","result","to_owned","clone_into","try_from","try_into","borrow_mut","type_id","borrow","typeid","__fsid_t","__sigset_t","timespec","__pthread_rwlock_arch_t","__pthread_internal_list","__pthread_mutex_s","__pthread_cond_s","__pthread_cond_s__bindgen_ty_1","__pthread_cond_s__bindgen_ty_1__bindgen_ty_1","__pthread_cond_s__bindgen_ty_2","__pthread_cond_s__bindgen_ty_2__bindgen_ty_1","pthread_mutexattr_t","pthread_condattr_t","pthread_attr_t","pthread_mutex_t","pthread_cond_t","pthread_rwlock_t","pthread_rwlockattr_t","pthread_barrier_t","pthread_barrierattr_t","max_align_t","tls_config","formatter","timeval","TLS major/minor protocol version.","TLS async I/O.","OCSP response (RFC 6960 Section 2.3).","OCSP certificate (RFC 6960 Section 2.2).","CRL (RFC 5280 Section 5.3.1).","TLS session.","tlsconfig","Build new [`TlsConfig`] object and return a configured…","Set the ALPN protocols that are supported.","Set the CA file.","Set the CA from memory.","Set the list of cipher that may be used.","Set the CRL file.","Set the CRL from memory.","Set the parameters of an Diffie-Hellman Ephemeral (DHE)…","Set the curves of an Elliptic Curve Diffie-Hellman…","Add additional files of a public and private key pair and…","Add an additional public and private key pair and OCSP…","Disable certificate verification.","Disable server name verification.","Disable certificate validity checking.","Set which versions of the TLS protocol may be used.","Set a file descriptor to manage data for TLS sessions.","Set the session identifier for TLS sessions.","Set the lifetime for TLS sessions.","Enable all certificate verification.","verify_client","Enable client certificate verification.","verify_client_optional","Enable optional client certificate verification.","Set the certificate verification depth.","option","tlswritecb","tlsreadcb","string","systemtime","libtls::config","libtls::error","libtls::tls","last_error","to_error","tlsconfigbuilder","TlsConfig","TlsConfigBuilder","TlsError","LastError","tls_config_set_ca_mem","tls_handshake","tls_read","tls_write","TLS_PROTOCOL_TLSv1_0","TLS_PROTOCOL_TLSv1_1","TLS_PROTOCOL_TLSv1_2","TLS_PROTOCOL_TLSv1","TLS_PROTOCOLS_ALL","TLS_PROTOCOLS_DEFAULT","TLS_WANT_POLLIN","TLS_WANT_POLLOUT","TLS_OCSP_RESPONSE_SUCCESSFUL","TLS_OCSP_RESPONSE_MALFORMED","TLS_OCSP_RESPONSE_INTERNALERROR","TLS_OCSP_RESPONSE_TRYLATER","TLS_OCSP_RESPONSE_SIGREQUIRED","TLS_OCSP_RESPONSE_UNAUTHORIZED","TLS_OCSP_CERT_GOOD","TLS_OCSP_CERT_REVOKED","TLS_OCSP_CERT_UNKNOWN","TLS_CRL_REASON_UNSPECIFIED","TLS_CRL_REASON_KEY_COMPROMISE","TLS_CRL_REASON_CA_COMPROMISE","TLS_CRL_REASON_AFFILIATION_CHANGED","TLS_CRL_REASON_SUPERSEDED","TLS_CRL_REASON_CESSATION_OF_OPERATION","TLS_CRL_REASON_CERTIFICATE_HOLD","TLS_CRL_REASON_REMOVE_FROM_CRL","TLS_CRL_REASON_PRIVILEGE_WITHDRAWN","TLS_CRL_REASON_AA_COMPROMISE","TLS_MAX_SESSION_ID_LENGTH","TLS_TICKET_KEY_SIZE","Error handling.","tokio_libtls","Chain on a computation for when a value is ready, passing…","Concatenate all results of a stream into a single…","Same as `join`, but with more futures.","Flatten the execution of this future when the successful…","catch_unwind","catchunwind","asyncsink","Composes a function in front of the sink.","A future that completes after the given stream has been…","into_future","`TlsConfigBuilder` for [`TlsConfig`].","An error returned by [`Tls`] and [`TlsConfig`] methods.","`Tls` error.","ConfigError","`TlsConfig` error.","Generic operating system or I/O error.","An interior nul byte was found.","No error was reported.","A result type that is returning a TlsError.","Returns the last API error.","Return the last error of the underlying API.","Returns the error string as an error object.","tlserror","tokio_libtls::prelude","tcpstream","tokio_libtls::error","to_string","tokio_libtls::prelude::error","tryfrominterror","as_raw_fd","asynctlsstream","is_not_ready","Return new `TlsConfigBuilder`.","Build new [`TlsConfig`] object.","Set the CA path.","dheparams","ecdhecurves","keypair_file","keypair_mem","noverifycert","noverifyname","noverifytime","protocols","session_fd","session_id","session_lifetime","ticket_key","verify_depth","socketaddr","connectfuture","shutdown","duration","AsyncTlsError","IntoFuture","AsyncSink","TlsStream","TcpStream"];
searchIndex["libtls"]={"doc":"Rust bindings for [LibreSSL]'s [libtls] library.","i":[[17,"TLS_API","libtls","TLS API version.",N,N],[17,R[88],E,R[38],N,N],[17,R[89],E,R[38],N,N],[17,R[90],E,R[38],N,N],[17,R[91],E,R[38],N,N],[17,R[92],E,R[38],N,N],[17,R[93],E,R[38],N,N],[17,R[94],E,R[39],N,N],[17,R[95],E,R[39],N,N],[17,R[96],E,R[40],N,N],[17,R[97],E,R[40],N,N],[17,R[98],E,R[40],N,N],[17,R[99],E,R[40],N,N],[17,R[100],E,R[40],N,N],[17,R[101],E,R[40],N,N],[17,R[102],E,R[41],N,N],[17,R[103],E,R[41],N,N],[17,R[104],E,R[41],N,N],[17,R[105],E,R[42],N,N],[17,R[106],E,R[42],N,N],[17,R[107],E,R[42],N,N],[17,R[108],E,R[42],N,N],[17,R[109],E,R[42],N,N],[17,R[110],E,R[42],N,N],[17,R[111],E,R[42],N,N],[17,R[112],E,R[42],N,N],[17,R[113],E,R[42],N,N],[17,R[114],E,R[42],N,N],[17,R[115],E,R[43],N,N],[17,R[116],E,R[43],N,N],[5,"init",E,"Initialize global data structures.",N,[[],[R[5]]]],[0,"config",E,"TLS configuration for connections.",N,N],[3,R[80],R[74],"The TLS configuration context for [`Tls`] connections.",N,N],[3,R[81],E,R[129],N,N],[5,"default_ca_cert_file",E,"Return path of the default CA file.",N,[[],["pathbuf"]]],[5,"parse_protocols",E,"Parse protocol string.",N,[[["str"]],[["u32"],[R[5],["u32"]]]]],[5,"load_file",E,"Load a certificate or key file.",N,[[[R[69],["str"]],["asref",["path"]],["path"],["str"]],[["vec",["u8"]],[R[5],["vec"]]]]],[5,"unload_file",E,"Securely unload file that was loaded into memory.",N,[[["vec",["u8"]],["u8"]]]],[11,"new",E,"Create a new configuration.",0,[[],[R[5]]]],[11,"add_keypair_file",E,"Add additional files of a public and private key pair.",0,[[["self"],["asref",["path"]],["path"]],[R[5]]]],[11,"add_keypair_mem",E,"Add an additional public and private key pair from memory.",0,[[["self"]],[R[5]]]],[11,"add_keypair_ocsp_file",E,R[54],0,[[["self"],["asref",["path"]],["path"]],[R[5]]]],[11,"add_keypair_ocsp_mem",E,R[55],0,[[["self"]],[R[5]]]],[11,"set_alpn",E,R[46],0,[[["self"],["str"]],[R[5]]]],[11,"set_ca_file",E,R[47],0,[[["self"],["asref",["path"]],["path"]],[R[5]]]],[11,"set_ca_path",E,"Set the path that should be searched for the CA files.",0,[[["self"],["asref",["path"]],["path"]],[R[5]]]],[11,"set_ca_mem",E,R[48],0,[[["self"]],[R[5]]]],[11,R[84],E,"Set the CA file from memory.",0,[[["self"]],[R[5]]]],[11,"set_cert_file",E,"Set the public certificate file.",0,[[["self"],["asref",["path"]],["path"]],[R[5]]]],[11,"set_cert_mem",E,"Set the public certificate from memory.",0,[[["self"]],[R[5]]]],[11,"set_ciphers",E,R[49],0,[[["self"],["str"]],[R[5]]]],[11,"set_crl_file",E,R[50],0,[[["self"],["asref",["path"]],["path"]],[R[5]]]],[11,"set_crl_mem",E,R[51],0,[[["self"]],[R[5]]]],[11,"set_dheparams",E,R[52],0,[[["self"],["str"]],[R[5]]]],[11,"set_ecdhecurve",E,"The `set_ecdhecurve` method was replaced by set_ecdhecurves.",0,[[["self"],["str"]],[R[5]]]],[11,"set_ecdhecurves",E,R[53],0,[[["self"],["str"]],[R[5]]]],[11,"set_key_file",E,"Set the private key file.",0,[[["self"],["asref",["path"]],["path"]],[R[5]]]],[11,"set_key_mem",E,"Set the private key from memory.",0,[[["self"]],[R[5]]]],[11,"set_keypair_file",E,"Set the files of the public and private key pair.",0,[[["self"],["asref",["path"]],["path"]],[R[5]]]],[11,"set_keypair_mem",E,"Set the public and private key pair from memory.",0,[[["self"]],[R[5]]]],[11,"set_keypair_ocsp_file",E,"Set the files of a public and private key pair and an OCSP…",0,[[["self"],["asref",["path"]],["path"]],[R[5]]]],[11,"set_keypair_ocsp_mem",E,"Set the public and private key pair and an OCSP staple…",0,[[["self"]],[R[5]]]],[11,"set_ocsp_staple_mem",E,"Set the OCSP staple from memory.",0,[[["self"]],[R[5]]]],[11,"set_ocsp_staple_file",E,"Set the OCSP staple file.",0,[[["self"],["asref",["path"]],["path"]],[R[5]]]],[11,"set_protocols",E,R[59],0,[[["self"],["u32"]],[R[5]]]],[11,"set_session_fd",E,R[60],0,[[["self"],["rawfd"]],[R[5]]]],[11,"set_verify_depth",E,R[68],0,[[["self"],["usize"]],[R[5]]]],[11,"prefer_ciphers_client",E,"Prefer ciphers in the client's cipher list.",0,[[["self"]]]],[11,"prefer_ciphers_server",E,"Prefer ciphers in the servers's cipher list.",0,[[["self"]]]],[11,"insecure_noverifycert",E,R[56],0,[[["self"]]]],[11,"insecure_noverifyname",E,R[57],0,[[["self"]]]],[11,"insecure_noverifytime",E,R[58],0,[[["self"]]]],[11,"verify",E,R[63],0,[[["self"]]]],[11,"ocsp_require_stapling",E,"Require OCSP stapling.",0,[[["self"]]]],[11,R[64],E,R[65],0,[[["self"]]]],[11,R[66],E,R[67],0,[[["self"]]]],[11,"clear_keys",E,"Securely clear secret keys.",0,[[["self"]]]],[11,"set_session_id",E,R[61],0,[[["self"]],[R[5]]]],[11,"set_session_lifetime",E,R[62],0,[[["self"],["usize"]],[R[5]]]],[11,"add_ticket_key",E,"Add a key for the encryption and authentication of TLS…",0,[[["self"],["u32"]],[R[5]]]],[11,"new",E,R[151],1,[[],["self"]]],[11,"build",E,R[152],1,[[["self"]],[[R[44]],[R[5],[R[44]]]]]],[11,"client",E,R[45],1,[[["self"]],[[R[5],["tls"]],["tls"]]]],[11,"server",E,R[45],1,[[["self"]],[[R[5],["tls"]],["tls"]]]],[11,"alpn",E,R[46],1,[[["self"],["str"]],["self"]]],[11,"ca_file",E,R[47],1,[[["self"],["asref",["path"]],["path"]],["self"]]],[11,"ca_path",E,R[153],1,[[["self"],["asref",["path"]],["path"]],["self"]]],[11,"ca_mem",E,R[48],1,[[["self"]],["self"]]],[11,"ciphers",E,R[49],1,[[["self"],["str"]],["self"]]],[11,"crl_file",E,R[50],1,[[["self"],["asref",["path"]],["path"]],["self"]]],[11,"crl_mem",E,R[51],1,[[["self"]],["self"]]],[11,R[154],E,R[52],1,[[["self"],["str"]],["self"]]],[11,R[155],E,R[53],1,[[["self"],["str"]],["self"]]],[11,R[156],E,R[54],1,[[["self"],["asref",["path"]],["path"],[R[69]]],["self"]]],[11,R[157],E,R[55],1,[[["self"],[R[69]]],["self"]]],[11,R[158],E,R[56],1,[[["self"]],["self"]]],[11,R[159],E,R[57],1,[[["self"]],["self"]]],[11,R[160],E,R[58],1,[[["self"]],["self"]]],[11,R[161],E,R[59],1,[[["self"],["u32"]],["self"]]],[11,R[162],E,R[60],1,[[["self"],["rawfd"]],["self"]]],[11,R[163],E,R[61],1,[[["self"]],["self"]]],[11,R[164],E,R[62],1,[[["self"],["usize"]],["self"]]],[11,R[165],E,"See also",1,[[["self"],["u32"]],["self"]]],[11,"verify",E,R[63],1,[[["self"]],["self"]]],[11,R[64],E,R[65],1,[[["self"]],["self"]]],[11,R[66],E,R[67],1,[[["self"]],["self"]]],[11,R[166],E,R[68],1,[[["self"],["usize"]],["self"]]],[0,"error","libtls",R[117],N,N],[4,R[82],R[75],R[130],N,N],[13,"CtxError",E,R[131],2,N],[13,R[132],E,R[133],2,N],[13,"IoError",E,R[134],2,N],[13,"NulError",E,R[135],2,N],[13,"NoError",E,R[136],2,N],[6,"Result",E,R[137],N,N],[8,R[83],E,R[138],N,N],[10,R[77],E,R[139],3,[[["self"]],[[R[72]],[R[5],[R[72]]]]]],[11,R[78],E,R[140],3,[[[R[72]]],[R[5]]]],[0,"tls","libtls","TLS connections, clients and servers.",N,N],[3,"Tls",R[76],"TLS connection clients and servers.",N,N],[6,"TlsReadCb",E,"Read callback for [`Tls::accept_cbs`] and…",N,N],[6,"TlsWriteCb",E,"Write callback for [`Tls::accept_cbs`] and…",N,N],[11,"client",E,"Create a new TLS client.",4,[[],[R[5]]]],[11,"server",E,"Create a new TLS server.",4,[[],[R[5]]]],[11,"configure",E,"Configure the TLS context.",4,[[["self"],[R[44]]],[R[5]]]],[11,"reset",E,"Reset the TLS connection.",4,[[["self"]]]],[11,"accept_fds",E,"Accept a new TLS connection on a pair of existing file…",4,[[["self"],["rawfd"]],[["tls"],[R[5],["tls"]]]]],[11,"accept_socket",E,"Accept a new TLS connection on a socket.",4,[[["self"],["rawfd"]],[["tls"],[R[5],["tls"]]]]],[11,"accept_raw_fd",E,"Accept a new TLS connection on an established connection.",4,[[["self"],[T]],[["tls"],[R[5],["tls"]]]]],[11,"accept_cbs",E,"Accept a new TLS connection with custom I/O callbacks.",4,[[["self"],[R[70]],[R[69]],[R[71]]],[["tls"],[R[5],["tls"]]]]],[11,"connect",E,"Initiate a new TLS connection.",4,[[["self"],["str"],[R[69],["str"]]],[R[5]]]],[11,"connect_fds",E,"Initiate a new TLS connection over a pair of existing file…",4,[[["self"],["rawfd"],["str"]],[R[5]]]],[11,"connect_servername",E,"Initiate a new TLS connection with a specified server name.",4,[[["self"],["str"],["tosocketaddrs"]],[R[5]]]],[11,"connect_socket",E,"Initiate a new TLS connection over an established socket.",4,[[["self"],["rawfd"],["str"]],[R[5]]]],[11,"connect_raw_fd",E,"Initiate a new TLS connection over an established…",4,[[["self"],["str"],[T]],[R[5]]]],[11,"connect_cbs",E,"Initiate a new TLS connection with custom I/O callbacks.",4,[[["self"],[R[70]],[R[69]],["str"],[R[71]]],[R[5]]]],[11,R[85],E,"Explicitly perform the TLS handshake.",4,[[["self"]],[[R[5],["isize"]],["isize"]]]],[11,R[86],E,"Read bytes from the TLS connection.",4,[[["self"]],[[R[5],["isize"]],["isize"]]]],[11,R[87],E,"Write bytes to the TLS connection.",4,[[["self"]],[[R[5],["isize"]],["isize"]]]],[11,"close",E,"Close the connection.",4,[[["self"]],[[R[5],["isize"]],["isize"]]]],[11,"peer_cert_provided",E,"Check for peer certificate.",4,[[["self"]],["bool"]]],[11,"peer_cert_contains_name",E,"Check if the peer certificate includes a matching name.",4,[[["self"],["str"]],[[R[5],["bool"]],["bool"]]]],[11,"peer_cert_hash",E,"Return hash of the peer certificate.",4,[[["self"]],[[R[72]],[R[5],[R[72]]]]]],[11,"peer_cert_issuer",E,"Return the issuer of the peer certificate.",4,[[["self"]],[[R[72]],[R[5],[R[72]]]]]],[11,"peer_cert_subject",E,"Return the subject of the peer certificate.",4,[[["self"]],[[R[72]],[R[5],[R[72]]]]]],[11,"peer_cert_notbefore",E,"Return the start of the validity period of the peer…",4,[[["self"]],[[R[5],[R[73]]],[R[73]]]]],[11,"peer_cert_notafter",E,"Return the end of the validity period of the peer…",4,[[["self"]],[[R[5],[R[73]]],[R[73]]]]],[11,"peer_cert_chain_pem",E,"Return the PEM-encoded peer certificate.",4,[[["self"]],[["vec",["u8"]],[R[5],["vec"]]]]],[11,"conn_alpn_selected",E,"Return the selected ALPN protocol.",4,[[["self"]],[[R[72]],[R[69],[R[72]]]]]],[11,"conn_cipher",E,"Return the negotiated cipher suite.",4,[[["self"]],[[R[72]],[R[5],[R[72]]]]]],[11,"conn_servername",E,"Return the client's server name.",4,[[["self"]],[[R[72]],[R[5],[R[72]]]]]],[11,"conn_session_resumed",E,"Check if a TLS session has been resumed.",4,[[["self"]],["bool"]]],[11,"conn_version",E,"Return the negotiated TLS version as a string.",4,[[["self"]],[[R[72]],[R[5],[R[72]]]]]],[11,"ocsp_process_response",E,"Process a raw OCSP response.",4,[[["self"]],[R[5]]]],[11,"peer_ocsp_cert_status",E,"OCSP certificate status.",4,[[["self"]],[[R[5],["isize"]],["isize"]]]],[11,"peer_ocsp_crl_reason",E,"OCSP certificate revocation reason.",4,[[["self"]],[[R[5],["isize"]],["isize"]]]],[11,"peer_ocsp_next_update",E,"OCSP next update time.",4,[[["self"]],[[R[5],[R[73]]],[R[73]]]]],[11,"peer_ocsp_response_status",E,"OCSP response status.",4,[[["self"]],[[R[5],["isize"]],["isize"]]]],[11,"peer_ocsp_result",E,"Textual representation of the OCSP status code.",4,[[["self"]],[[R[72]],[R[5],[R[72]]]]]],[11,"peer_ocsp_revocation_time",E,"OCSP revocation time.",4,[[["self"]],[[R[5],[R[73]]],[R[73]]]]],[11,"peer_ocsp_this_update",E,"OCSP this update time.",4,[[["self"]],[[R[5],[R[73]]],[R[73]]]]],[11,"peer_ocsp_url",E,"OCSP validation URL.",4,[[["self"]],[[R[72]],[R[5],[R[72]]]]]],[14,"try_tls","libtls","Convert return value of `Tls` I/O functions into…",N,N],[11,"into",R[74],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[5]]]],[11,R[9],E,E,0,[[],[R[5]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[13]]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[[U]],[R[5]]]],[11,R[9],E,E,1,[[],[R[5]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[13]]]],[11,"into",R[75],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[145],E,E,2,[[["self"]],[R[72]]]],[11,R[8],E,E,2,[[[U]],[R[5]]]],[11,R[9],E,E,2,[[],[R[5]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[12],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[13]]]],[11,"into",R[76],E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[8],E,E,4,[[[U]],[R[5]]]],[11,R[9],E,E,4,[[],[R[5]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[12],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[13]]]],[11,R[77],R[74],"Returns the configuration last error.",0,[[["self"]],[[R[72]],[R[5],[R[72]]]]]],[11,R[78],E,E,0,[[[R[72]]],[R[5]]]],[11,R[77],R[76],"Returns the last error of the TLS context.",4,[[["self"]],[[R[72]],[R[5],[R[72]]]]]],[11,R[78],E,E,4,[[[R[72]]],[R[5]]]],[11,"drop",R[74],"Free the configuration object. This should only happen…",0,[[["self"]]]],[11,"drop",R[76],"The `drop` method frees the [`Tls`] context and forcibly…",4,[[["self"]]]],[11,"default",R[74],E,1,[[],[R[79]]]],[11,"clone",E,E,1,[[["self"]],[R[79]]]],[11,"from",E,E,0,[[],["self"]]],[11,"from",R[75],E,2,[[["error"]],["self"]]],[11,"from",E,E,2,[[["nulerror"]],["self"]]],[11,"from",E,E,2,[[[R[147]]],["self"]]],[11,"from",R[76],E,4,[[],["self"]]],[11,"fmt",R[74],E,0,[[["self"],[R[36]]],[R[5]]]],[11,"fmt",E,E,1,[[["self"],[R[36]]],[R[5]]]],[11,"fmt",R[75],E,2,[[["self"],[R[36]]],[R[5]]]],[11,"fmt",R[76],E,4,[[["self"],[R[36]]],[R[5]]]],[11,"fmt",R[75],E,2,[[["self"],[R[36]]],[R[5]]]],[11,"source",E,E,2,[[["self"]],[["error"],[R[69],["error"]]]]],[11,"read",R[76],"Read from the TLS connection.",4,[[["self"]],[[R[5],["usize"]],["usize"]]]],[11,"write",E,"Write to the TLS connection.",4,[[["self"]],[[R[5],["usize"]],["usize"]]]],[11,"flush",E,E,4,[[["self"]],[R[5]]]],[11,R[148],E,E,4,[[["self"]],["rawfd"]]]],"p":[[3,R[80]],[3,R[81]],[4,R[82]],[8,R[83]],[3,"Tls"]]};
searchIndex["libtls_sys"]={"doc":E,"i":[[3,R[14],"libtls_sys",E,N,N],[12,"__val",E,E,0,N],[3,R[15],E,E,N,N],[12,"__val",E,E,1,N],[3,R[37],E,E,N,N],[12,R[0],E,E,2,N],[12,"tv_usec",E,E,2,N],[3,R[16],E,E,N,N],[12,R[0],E,E,3,N],[12,"tv_nsec",E,E,3,N],[3,"fd_set",E,E,N,N],[12,"__fds_bits",E,E,4,N],[3,R[17],E,E,N,N],[12,"__readers",E,E,5,N],[12,"__writers",E,E,5,N],[12,"__wrphase_futex",E,E,5,N],[12,"__writers_futex",E,E,5,N],[12,"__pad3",E,E,5,N],[12,"__pad4",E,E,5,N],[12,"__cur_writer",E,E,5,N],[12,"__shared",E,E,5,N],[12,"__rwelision",E,E,5,N],[12,"__pad1",E,E,5,N],[12,"__pad2",E,E,5,N],[12,"__flags",E,E,5,N],[3,R[18],E,E,N,N],[12,"__prev",E,E,6,N],[12,"__next",E,E,6,N],[3,R[19],E,E,N,N],[12,"__lock",E,E,7,N],[12,"__count",E,E,7,N],[12,"__owner",E,E,7,N],[12,"__nusers",E,E,7,N],[12,"__kind",E,E,7,N],[12,"__spins",E,E,7,N],[12,"__elision",E,E,7,N],[12,"__list",E,E,7,N],[3,R[20],E,E,N,N],[12,"__bindgen_anon_1",E,E,8,N],[12,"__bindgen_anon_2",E,E,8,N],[12,"__g_refs",E,E,8,N],[12,"__g_size",E,E,8,N],[12,"__g1_orig_size",E,E,8,N],[12,"__wrefs",E,E,8,N],[12,"__g_signals",E,E,8,N],[3,R[22],E,E,N,N],[12,"__low",E,E,9,N],[12,R[1],E,E,9,N],[3,R[24],E,E,N,N],[12,"__low",E,E,10,N],[12,R[1],E,E,10,N],[3,R[34],E,E,N,N],[12,"__clang_max_align_nonce1",E,E,11,N],[12,"__bindgen_padding_0",E,E,11,N],[12,"__clang_max_align_nonce2",E,E,11,N],[3,"tls",E,E,N,N],[3,R[35],E,E,N,N],[19,R[21],E,E,N,N],[12,"__wseq",E,E,12,N],[12,"__wseq32",E,E,12,N],[19,R[23],E,E,N,N],[12,"__g1_start",E,E,13,N],[12,"__g1_start32",E,E,13,N],[19,R[25],E,E,N,N],[12,R[2],E,E,14,N],[12,R[3],E,E,14,N],[19,R[26],E,E,N,N],[12,R[2],E,E,15,N],[12,R[3],E,E,15,N],[19,R[27],E,E,N,N],[12,R[2],E,E,16,N],[12,R[3],E,E,16,N],[19,R[28],E,E,N,N],[12,R[4],E,E,17,N],[12,R[2],E,E,17,N],[12,R[3],E,E,17,N],[19,R[29],E,E,N,N],[12,R[4],E,E,18,N],[12,R[2],E,E,18,N],[12,R[3],E,E,18,N],[19,R[30],E,E,N,N],[12,R[4],E,E,19,N],[12,R[2],E,E,19,N],[12,R[3],E,E,19,N],[19,R[31],E,E,N,N],[12,R[2],E,E,20,N],[12,R[3],E,E,20,N],[19,R[32],E,E,N,N],[12,R[2],E,E,21,N],[12,R[3],E,E,21,N],[19,R[33],E,E,N,N],[12,R[2],E,E,22,N],[12,R[3],E,E,22,N],[5,"select",E,E,N,N],[5,"pselect",E,E,N,N],[5,"tls_init",E,E,N,N],[5,"tls_config_error",E,E,N,N],[5,"tls_error",E,E,N,N],[5,"tls_config_new",E,E,N,N],[5,"tls_config_free",E,E,N,N],[5,"tls_default_ca_cert_file",E,E,N,N],[5,"tls_config_add_keypair_file",E,E,N,N],[5,"tls_config_add_keypair_mem",E,E,N,N],[5,"tls_config_add_keypair_ocsp_file",E,E,N,N],[5,"tls_config_add_keypair_ocsp_mem",E,E,N,N],[5,"tls_config_set_alpn",E,E,N,N],[5,"tls_config_set_ca_file",E,E,N,N],[5,"tls_config_set_ca_path",E,E,N,N],[5,R[84],E,E,N,N],[5,"tls_config_set_cert_file",E,E,N,N],[5,"tls_config_set_cert_mem",E,E,N,N],[5,"tls_config_set_ciphers",E,E,N,N],[5,"tls_config_set_crl_file",E,E,N,N],[5,"tls_config_set_crl_mem",E,E,N,N],[5,"tls_config_set_dheparams",E,E,N,N],[5,"tls_config_set_ecdhecurve",E,E,N,N],[5,"tls_config_set_ecdhecurves",E,E,N,N],[5,"tls_config_set_key_file",E,E,N,N],[5,"tls_config_set_key_mem",E,E,N,N],[5,"tls_config_set_keypair_file",E,E,N,N],[5,"tls_config_set_keypair_mem",E,E,N,N],[5,"tls_config_set_keypair_ocsp_file",E,E,N,N],[5,"tls_config_set_keypair_ocsp_mem",E,E,N,N],[5,"tls_config_set_ocsp_staple_mem",E,E,N,N],[5,"tls_config_set_ocsp_staple_file",E,E,N,N],[5,"tls_config_set_protocols",E,E,N,N],[5,"tls_config_set_session_fd",E,E,N,N],[5,"tls_config_set_verify_depth",E,E,N,N],[5,"tls_config_prefer_ciphers_client",E,E,N,N],[5,"tls_config_prefer_ciphers_server",E,E,N,N],[5,"tls_config_insecure_noverifycert",E,E,N,N],[5,"tls_config_insecure_noverifyname",E,E,N,N],[5,"tls_config_insecure_noverifytime",E,E,N,N],[5,"tls_config_verify",E,E,N,N],[5,"tls_config_ocsp_require_stapling",E,E,N,N],[5,"tls_config_verify_client",E,E,N,N],[5,"tls_config_verify_client_optional",E,E,N,N],[5,"tls_config_clear_keys",E,E,N,N],[5,"tls_config_parse_protocols",E,E,N,N],[5,"tls_config_set_session_id",E,E,N,N],[5,"tls_config_set_session_lifetime",E,E,N,N],[5,"tls_config_add_ticket_key",E,E,N,N],[5,"tls_client",E,E,N,N],[5,"tls_server",E,E,N,N],[5,"tls_configure",E,E,N,N],[5,"tls_reset",E,E,N,N],[5,"tls_free",E,E,N,N],[5,"tls_accept_fds",E,E,N,N],[5,"tls_accept_socket",E,E,N,N],[5,"tls_accept_cbs",E,E,N,N],[5,"tls_connect",E,E,N,N],[5,"tls_connect_fds",E,E,N,N],[5,"tls_connect_servername",E,E,N,N],[5,"tls_connect_socket",E,E,N,N],[5,"tls_connect_cbs",E,E,N,N],[5,R[85],E,E,N,N],[5,R[86],E,E,N,N],[5,R[87],E,E,N,N],[5,"tls_close",E,E,N,N],[5,"tls_peer_cert_provided",E,E,N,N],[5,"tls_peer_cert_contains_name",E,E,N,N],[5,"tls_peer_cert_hash",E,E,N,N],[5,"tls_peer_cert_issuer",E,E,N,N],[5,"tls_peer_cert_subject",E,E,N,N],[5,"tls_peer_cert_notbefore",E,E,N,N],[5,"tls_peer_cert_notafter",E,E,N,N],[5,"tls_peer_cert_chain_pem",E,E,N,N],[5,"tls_conn_alpn_selected",E,E,N,N],[5,"tls_conn_cipher",E,E,N,N],[5,"tls_conn_servername",E,E,N,N],[5,"tls_conn_session_resumed",E,E,N,N],[5,"tls_conn_version",E,E,N,N],[5,"tls_load_file",E,E,N,N],[5,"tls_unload_file",E,E,N,N],[5,"tls_ocsp_process_response",E,E,N,N],[5,"tls_peer_ocsp_cert_status",E,E,N,N],[5,"tls_peer_ocsp_crl_reason",E,E,N,N],[5,"tls_peer_ocsp_next_update",E,E,N,N],[5,"tls_peer_ocsp_response_status",E,E,N,N],[5,"tls_peer_ocsp_result",E,E,N,N],[5,"tls_peer_ocsp_revocation_time",E,E,N,N],[5,"tls_peer_ocsp_this_update",E,E,N,N],[5,"tls_peer_ocsp_url",E,E,N,N],[5,"close",E,E,N,N],[6,"__u_char",E,E,N,N],[6,"__u_short",E,E,N,N],[6,"__u_int",E,E,N,N],[6,"__u_long",E,E,N,N],[6,"__int8_t",E,E,N,N],[6,"__uint8_t",E,E,N,N],[6,"__int16_t",E,E,N,N],[6,"__uint16_t",E,E,N,N],[6,"__int32_t",E,E,N,N],[6,"__uint32_t",E,E,N,N],[6,"__int64_t",E,E,N,N],[6,"__uint64_t",E,E,N,N],[6,"__int_least8_t",E,E,N,N],[6,"__uint_least8_t",E,E,N,N],[6,"__int_least16_t",E,E,N,N],[6,"__uint_least16_t",E,E,N,N],[6,"__int_least32_t",E,E,N,N],[6,"__uint_least32_t",E,E,N,N],[6,"__int_least64_t",E,E,N,N],[6,"__uint_least64_t",E,E,N,N],[6,"__quad_t",E,E,N,N],[6,"__u_quad_t",E,E,N,N],[6,"__intmax_t",E,E,N,N],[6,"__uintmax_t",E,E,N,N],[6,"__dev_t",E,E,N,N],[6,"__uid_t",E,E,N,N],[6,"__gid_t",E,E,N,N],[6,"__ino_t",E,E,N,N],[6,"__ino64_t",E,E,N,N],[6,"__mode_t",E,E,N,N],[6,"__nlink_t",E,E,N,N],[6,"__off_t",E,E,N,N],[6,"__off64_t",E,E,N,N],[6,"__pid_t",E,E,N,N],[6,"__clock_t",E,E,N,N],[6,"__rlim_t",E,E,N,N],[6,"__rlim64_t",E,E,N,N],[6,"__id_t",E,E,N,N],[6,"__time_t",E,E,N,N],[6,"__useconds_t",E,E,N,N],[6,"__suseconds_t",E,E,N,N],[6,"__daddr_t",E,E,N,N],[6,"__key_t",E,E,N,N],[6,"__clockid_t",E,E,N,N],[6,"__timer_t",E,E,N,N],[6,"__blksize_t",E,E,N,N],[6,"__blkcnt_t",E,E,N,N],[6,"__blkcnt64_t",E,E,N,N],[6,"__fsblkcnt_t",E,E,N,N],[6,"__fsblkcnt64_t",E,E,N,N],[6,"__fsfilcnt_t",E,E,N,N],[6,"__fsfilcnt64_t",E,E,N,N],[6,"__fsword_t",E,E,N,N],[6,"__ssize_t",E,E,N,N],[6,"__syscall_slong_t",E,E,N,N],[6,"__syscall_ulong_t",E,E,N,N],[6,"__loff_t",E,E,N,N],[6,"__caddr_t",E,E,N,N],[6,"__intptr_t",E,E,N,N],[6,"__socklen_t",E,E,N,N],[6,"__sig_atomic_t",E,E,N,N],[6,"u_char",E,E,N,N],[6,"u_short",E,E,N,N],[6,"u_int",E,E,N,N],[6,"u_long",E,E,N,N],[6,"quad_t",E,E,N,N],[6,"u_quad_t",E,E,N,N],[6,"fsid_t",E,E,N,N],[6,"loff_t",E,E,N,N],[6,"ino_t",E,E,N,N],[6,"dev_t",E,E,N,N],[6,"gid_t",E,E,N,N],[6,"mode_t",E,E,N,N],[6,"nlink_t",E,E,N,N],[6,"uid_t",E,E,N,N],[6,"off_t",E,E,N,N],[6,"pid_t",E,E,N,N],[6,"id_t",E,E,N,N],[6,"daddr_t",E,E,N,N],[6,"caddr_t",E,E,N,N],[6,"key_t",E,E,N,N],[6,"clock_t",E,E,N,N],[6,"clockid_t",E,E,N,N],[6,"time_t",E,E,N,N],[6,"timer_t",E,E,N,N],[6,"ulong",E,E,N,N],[6,"ushort",E,E,N,N],[6,"uint",E,E,N,N],[6,"u_int8_t",E,E,N,N],[6,"u_int16_t",E,E,N,N],[6,"u_int32_t",E,E,N,N],[6,"u_int64_t",E,E,N,N],[6,"register_t",E,E,N,N],[6,"sigset_t",E,E,N,N],[6,"suseconds_t",E,E,N,N],[6,"__fd_mask",E,E,N,N],[6,"fd_mask",E,E,N,N],[6,"blksize_t",E,E,N,N],[6,"blkcnt_t",E,E,N,N],[6,"fsblkcnt_t",E,E,N,N],[6,"fsfilcnt_t",E,E,N,N],[6,"__pthread_list_t",E,E,N,N],[6,"pthread_t",E,E,N,N],[6,"pthread_key_t",E,E,N,N],[6,"pthread_once_t",E,E,N,N],[6,"pthread_spinlock_t",E,E,N,N],[6,"wchar_t",E,E,N,N],[6,"int_least8_t",E,E,N,N],[6,"int_least16_t",E,E,N,N],[6,"int_least32_t",E,E,N,N],[6,"int_least64_t",E,E,N,N],[6,"uint_least8_t",E,E,N,N],[6,"uint_least16_t",E,E,N,N],[6,"uint_least32_t",E,E,N,N],[6,"uint_least64_t",E,E,N,N],[6,"int_fast8_t",E,E,N,N],[6,"int_fast16_t",E,E,N,N],[6,"int_fast32_t",E,E,N,N],[6,"int_fast64_t",E,E,N,N],[6,"uint_fast8_t",E,E,N,N],[6,"uint_fast16_t",E,E,N,N],[6,"uint_fast32_t",E,E,N,N],[6,"uint_fast64_t",E,E,N,N],[6,"intmax_t",E,E,N,N],[6,"uintmax_t",E,E,N,N],[6,"tls_read_cb",E,E,N,N],[6,"tls_write_cb",E,E,N,N],[17,"_SYS_TYPES_H",E,E,N,N],[17,"_FEATURES_H",E,E,N,N],[17,"_DEFAULT_SOURCE",E,E,N,N],[17,"__USE_ISOC11",E,E,N,N],[17,"__USE_ISOC99",E,E,N,N],[17,"__USE_ISOC95",E,E,N,N],[17,"__USE_POSIX_IMPLICITLY",E,E,N,N],[17,"_POSIX_SOURCE",E,E,N,N],[17,"_POSIX_C_SOURCE",E,E,N,N],[17,"__USE_POSIX",E,E,N,N],[17,"__USE_POSIX2",E,E,N,N],[17,"__USE_POSIX199309",E,E,N,N],[17,"__USE_POSIX199506",E,E,N,N],[17,"__USE_XOPEN2K",E,E,N,N],[17,"__USE_XOPEN2K8",E,E,N,N],[17,"_ATFILE_SOURCE",E,E,N,N],[17,"__USE_MISC",E,E,N,N],[17,"__USE_ATFILE",E,E,N,N],[17,"__USE_FORTIFY_LEVEL",E,E,N,N],[17,"__GLIBC_USE_DEPRECATED_GETS",E,E,N,N],[17,"__GLIBC_USE_DEPRECATED_SCANF",E,E,N,N],[17,"_STDC_PREDEF_H",E,E,N,N],[17,"__STDC_IEC_559__",E,E,N,N],[17,"__STDC_IEC_559_COMPLEX__",E,E,N,N],[17,"__STDC_ISO_10646__",E,E,N,N],[17,"__GNU_LIBRARY__",E,E,N,N],[17,"__GLIBC__",E,E,N,N],[17,"__GLIBC_MINOR__",E,E,N,N],[17,"_SYS_CDEFS_H",E,E,N,N],[17,"__glibc_c99_flexarr_available",E,E,N,N],[17,"__WORDSIZE",E,E,N,N],[17,"__WORDSIZE_TIME64_COMPAT32",E,E,N,N],[17,"__SYSCALL_WORDSIZE",E,E,N,N],[17,"__HAVE_GENERIC_SELECTION",E,E,N,N],[17,"_BITS_TYPES_H",E,E,N,N],[17,"__TIMESIZE",E,E,N,N],[17,"_BITS_TYPESIZES_H",E,E,N,N],[17,"__OFF_T_MATCHES_OFF64_T",E,E,N,N],[17,"__INO_T_MATCHES_INO64_T",E,E,N,N],[17,"__RLIM_T_MATCHES_RLIM64_T",E,E,N,N],[17,"__FD_SETSIZE",E,E,N,N],[17,"_BITS_TIME64_H",E,E,N,N],[17,"__clock_t_defined",E,E,N,N],[17,"__clockid_t_defined",E,E,N,N],[17,"__time_t_defined",E,E,N,N],[17,"__timer_t_defined",E,E,N,N],[17,"_BITS_STDINT_INTN_H",E,E,N,N],[17,"__BIT_TYPES_DEFINED__",E,E,N,N],[17,"_ENDIAN_H",E,E,N,N],[17,"__LITTLE_ENDIAN",E,E,N,N],[17,"__BIG_ENDIAN",E,E,N,N],[17,"__PDP_ENDIAN",E,E,N,N],[17,"__BYTE_ORDER",E,E,N,N],[17,"__FLOAT_WORD_ORDER",E,E,N,N],[17,"LITTLE_ENDIAN",E,E,N,N],[17,"BIG_ENDIAN",E,E,N,N],[17,"PDP_ENDIAN",E,E,N,N],[17,"BYTE_ORDER",E,E,N,N],[17,"_BITS_BYTESWAP_H",E,E,N,N],[17,"_BITS_UINTN_IDENTITY_H",E,E,N,N],[17,"_SYS_SELECT_H",E,E,N,N],[17,"__FD_ZERO_STOS",E,E,N,N],[17,"__sigset_t_defined",E,E,N,N],[17,"__timeval_defined",E,E,N,N],[17,"_STRUCT_TIMESPEC",E,E,N,N],[17,"FD_SETSIZE",E,E,N,N],[17,"_BITS_PTHREADTYPES_COMMON_H",E,E,N,N],[17,"_THREAD_SHARED_TYPES_H",E,E,N,N],[17,"_BITS_PTHREADTYPES_ARCH_H",E,E,N,N],[17,"__SIZEOF_PTHREAD_MUTEX_T",E,E,N,N],[17,"__SIZEOF_PTHREAD_ATTR_T",E,E,N,N],[17,"__SIZEOF_PTHREAD_RWLOCK_T",E,E,N,N],[17,"__SIZEOF_PTHREAD_BARRIER_T",E,E,N,N],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T",E,E,N,N],[17,"__SIZEOF_PTHREAD_COND_T",E,E,N,N],[17,"__SIZEOF_PTHREAD_CONDATTR_T",E,E,N,N],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T",E,E,N,N],[17,"__SIZEOF_PTHREAD_BARRIERATTR_T",E,E,N,N],[17,"__PTHREAD_MUTEX_LOCK_ELISION",E,E,N,N],[17,"__PTHREAD_MUTEX_NUSERS_AFTER_KIND",E,E,N,N],[17,"__PTHREAD_MUTEX_USE_UNION",E,E,N,N],[17,"__PTHREAD_RWLOCK_INT_FLAGS_SHARED",E,E,N,N],[17,"__PTHREAD_MUTEX_HAVE_PREV",E,E,N,N],[17,"__have_pthread_attr_t",E,E,N,N],[17,"_STDINT_H",E,E,N,N],[17,"__GLIBC_USE_LIB_EXT2",E,E,N,N],[17,"__GLIBC_USE_IEC_60559_BFP_EXT",E,E,N,N],[17,"__GLIBC_USE_IEC_60559_FUNCS_EXT",E,E,N,N],[17,"__GLIBC_USE_IEC_60559_TYPES_EXT",E,E,N,N],[17,"_BITS_WCHAR_H",E,E,N,N],[17,"_BITS_STDINT_UINTN_H",E,E,N,N],[17,"INT8_MIN",E,E,N,N],[17,"INT16_MIN",E,E,N,N],[17,"INT32_MIN",E,E,N,N],[17,"INT8_MAX",E,E,N,N],[17,"INT16_MAX",E,E,N,N],[17,"INT32_MAX",E,E,N,N],[17,"UINT8_MAX",E,E,N,N],[17,"UINT16_MAX",E,E,N,N],[17,"UINT32_MAX",E,E,N,N],[17,"INT_LEAST8_MIN",E,E,N,N],[17,"INT_LEAST16_MIN",E,E,N,N],[17,"INT_LEAST32_MIN",E,E,N,N],[17,"INT_LEAST8_MAX",E,E,N,N],[17,"INT_LEAST16_MAX",E,E,N,N],[17,"INT_LEAST32_MAX",E,E,N,N],[17,"UINT_LEAST8_MAX",E,E,N,N],[17,"UINT_LEAST16_MAX",E,E,N,N],[17,"UINT_LEAST32_MAX",E,E,N,N],[17,"INT_FAST8_MIN",E,E,N,N],[17,"INT_FAST16_MIN",E,E,N,N],[17,"INT_FAST32_MIN",E,E,N,N],[17,"INT_FAST8_MAX",E,E,N,N],[17,"INT_FAST16_MAX",E,E,N,N],[17,"INT_FAST32_MAX",E,E,N,N],[17,"UINT_FAST8_MAX",E,E,N,N],[17,"UINT_FAST16_MAX",E,E,N,N],[17,"UINT_FAST32_MAX",E,E,N,N],[17,"INTPTR_MIN",E,E,N,N],[17,"INTPTR_MAX",E,E,N,N],[17,"UINTPTR_MAX",E,E,N,N],[17,"PTRDIFF_MIN",E,E,N,N],[17,"PTRDIFF_MAX",E,E,N,N],[17,"SIG_ATOMIC_MIN",E,E,N,N],[17,"SIG_ATOMIC_MAX",E,E,N,N],[17,"SIZE_MAX",E,E,N,N],[17,"WINT_MIN",E,E,N,N],[17,"WINT_MAX",E,E,N,N],[17,"TLS_API",E,E,N,N],[17,R[88],E,E,N,N],[17,R[89],E,E,N,N],[17,R[90],E,E,N,N],[17,R[91],E,E,N,N],[17,R[92],E,E,N,N],[17,R[93],E,E,N,N],[17,R[94],E,E,N,N],[17,R[95],E,E,N,N],[17,R[96],E,E,N,N],[17,R[97],E,E,N,N],[17,R[98],E,E,N,N],[17,R[99],E,E,N,N],[17,R[100],E,E,N,N],[17,R[101],E,E,N,N],[17,R[102],E,E,N,N],[17,R[103],E,E,N,N],[17,R[104],E,E,N,N],[17,R[105],E,E,N,N],[17,R[106],E,E,N,N],[17,R[107],E,E,N,N],[17,R[108],E,E,N,N],[17,R[109],E,E,N,N],[17,R[110],E,E,N,N],[17,R[111],E,E,N,N],[17,R[112],E,E,N,N],[17,R[113],E,E,N,N],[17,R[114],E,E,N,N],[17,R[115],E,E,N,N],[17,R[116],E,E,N,N],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[5]]]],[11,R[9],E,E,0,[[],[R[5]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[13]]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[[U]],[R[5]]]],[11,R[9],E,E,1,[[],[R[5]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[13]]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[8],E,E,2,[[[U]],[R[5]]]],[11,R[9],E,E,2,[[],[R[5]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[12],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[13]]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[8],E,E,3,[[[U]],[R[5]]]],[11,R[9],E,E,3,[[],[R[5]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[12],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[13]]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[8],E,E,4,[[[U]],[R[5]]]],[11,R[9],E,E,4,[[],[R[5]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[12],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[13]]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[8],E,E,5,[[[U]],[R[5]]]],[11,R[9],E,E,5,[[],[R[5]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[12],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[13]]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[7],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[8],E,E,6,[[[U]],[R[5]]]],[11,R[9],E,E,6,[[],[R[5]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[12],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[13]]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[7],E,E,7,[[["self"],[T]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[8],E,E,7,[[[U]],[R[5]]]],[11,R[9],E,E,7,[[],[R[5]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[12],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[13]]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[7],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[8],E,E,8,[[[U]],[R[5]]]],[11,R[9],E,E,8,[[],[R[5]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[12],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[13]]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[7],E,E,9,[[["self"],[T]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[8],E,E,9,[[[U]],[R[5]]]],[11,R[9],E,E,9,[[],[R[5]]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[12],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[13]]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[7],E,E,10,[[["self"],[T]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[8],E,E,10,[[[U]],[R[5]]]],[11,R[9],E,E,10,[[],[R[5]]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[12],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[13]]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[7],E,E,11,[[["self"],[T]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[8],E,E,11,[[[U]],[R[5]]]],[11,R[9],E,E,11,[[],[R[5]]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[12],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[13]]]],[11,R[6],E,E,23,[[["self"]],[T]]],[11,R[7],E,E,23,[[["self"],[T]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[8],E,E,23,[[[U]],[R[5]]]],[11,R[9],E,E,23,[[],[R[5]]]],[11,R[10],E,E,23,[[["self"]],[T]]],[11,R[12],E,E,23,[[["self"]],[T]]],[11,R[11],E,E,23,[[["self"]],[R[13]]]],[11,R[6],E,E,24,[[["self"]],[T]]],[11,R[7],E,E,24,[[["self"],[T]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[8],E,E,24,[[[U]],[R[5]]]],[11,R[9],E,E,24,[[],[R[5]]]],[11,R[10],E,E,24,[[["self"]],[T]]],[11,R[12],E,E,24,[[["self"]],[T]]],[11,R[11],E,E,24,[[["self"]],[R[13]]]],[11,R[6],E,E,12,[[["self"]],[T]]],[11,R[7],E,E,12,[[["self"],[T]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[8],E,E,12,[[[U]],[R[5]]]],[11,R[9],E,E,12,[[],[R[5]]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[12],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[13]]]],[11,R[6],E,E,13,[[["self"]],[T]]],[11,R[7],E,E,13,[[["self"],[T]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[8],E,E,13,[[[U]],[R[5]]]],[11,R[9],E,E,13,[[],[R[5]]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[12],E,E,13,[[["self"]],[T]]],[11,R[11],E,E,13,[[["self"]],[R[13]]]],[11,R[6],E,E,14,[[["self"]],[T]]],[11,R[7],E,E,14,[[["self"],[T]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[8],E,E,14,[[[U]],[R[5]]]],[11,R[9],E,E,14,[[],[R[5]]]],[11,R[10],E,E,14,[[["self"]],[T]]],[11,R[12],E,E,14,[[["self"]],[T]]],[11,R[11],E,E,14,[[["self"]],[R[13]]]],[11,R[6],E,E,15,[[["self"]],[T]]],[11,R[7],E,E,15,[[["self"],[T]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[8],E,E,15,[[[U]],[R[5]]]],[11,R[9],E,E,15,[[],[R[5]]]],[11,R[10],E,E,15,[[["self"]],[T]]],[11,R[12],E,E,15,[[["self"]],[T]]],[11,R[11],E,E,15,[[["self"]],[R[13]]]],[11,R[6],E,E,16,[[["self"]],[T]]],[11,R[7],E,E,16,[[["self"],[T]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[8],E,E,16,[[[U]],[R[5]]]],[11,R[9],E,E,16,[[],[R[5]]]],[11,R[10],E,E,16,[[["self"]],[T]]],[11,R[12],E,E,16,[[["self"]],[T]]],[11,R[11],E,E,16,[[["self"]],[R[13]]]],[11,R[6],E,E,17,[[["self"]],[T]]],[11,R[7],E,E,17,[[["self"],[T]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[8],E,E,17,[[[U]],[R[5]]]],[11,R[9],E,E,17,[[],[R[5]]]],[11,R[10],E,E,17,[[["self"]],[T]]],[11,R[12],E,E,17,[[["self"]],[T]]],[11,R[11],E,E,17,[[["self"]],[R[13]]]],[11,R[6],E,E,18,[[["self"]],[T]]],[11,R[7],E,E,18,[[["self"],[T]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[8],E,E,18,[[[U]],[R[5]]]],[11,R[9],E,E,18,[[],[R[5]]]],[11,R[10],E,E,18,[[["self"]],[T]]],[11,R[12],E,E,18,[[["self"]],[T]]],[11,R[11],E,E,18,[[["self"]],[R[13]]]],[11,R[6],E,E,19,[[["self"]],[T]]],[11,R[7],E,E,19,[[["self"],[T]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[8],E,E,19,[[[U]],[R[5]]]],[11,R[9],E,E,19,[[],[R[5]]]],[11,R[10],E,E,19,[[["self"]],[T]]],[11,R[12],E,E,19,[[["self"]],[T]]],[11,R[11],E,E,19,[[["self"]],[R[13]]]],[11,R[6],E,E,20,[[["self"]],[T]]],[11,R[7],E,E,20,[[["self"],[T]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[8],E,E,20,[[[U]],[R[5]]]],[11,R[9],E,E,20,[[],[R[5]]]],[11,R[10],E,E,20,[[["self"]],[T]]],[11,R[12],E,E,20,[[["self"]],[T]]],[11,R[11],E,E,20,[[["self"]],[R[13]]]],[11,R[6],E,E,21,[[["self"]],[T]]],[11,R[7],E,E,21,[[["self"],[T]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[8],E,E,21,[[[U]],[R[5]]]],[11,R[9],E,E,21,[[],[R[5]]]],[11,R[10],E,E,21,[[["self"]],[T]]],[11,R[12],E,E,21,[[["self"]],[T]]],[11,R[11],E,E,21,[[["self"]],[R[13]]]],[11,R[6],E,E,22,[[["self"]],[T]]],[11,R[7],E,E,22,[[["self"],[T]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[8],E,E,22,[[[U]],[R[5]]]],[11,R[9],E,E,22,[[],[R[5]]]],[11,R[10],E,E,22,[[["self"]],[T]]],[11,R[12],E,E,22,[[["self"]],[T]]],[11,R[11],E,E,22,[[["self"]],[R[13]]]],[11,"clone",E,E,0,[[["self"]],[R[14]]]],[11,"clone",E,E,1,[[["self"]],[R[15]]]],[11,"clone",E,E,2,[[["self"]],[R[37]]]],[11,"clone",E,E,3,[[["self"]],[R[16]]]],[11,"clone",E,E,4,[[["self"]],["fd_set"]]],[11,"clone",E,E,5,[[["self"]],[R[17]]]],[11,"clone",E,E,6,[[["self"]],[R[18]]]],[11,"clone",E,E,7,[[["self"]],[R[19]]]],[11,"clone",E,E,8,[[["self"]],[R[20]]]],[11,"clone",E,E,12,[[["self"]],[R[21]]]],[11,"clone",E,E,9,[[["self"]],[R[22]]]],[11,"clone",E,E,13,[[["self"]],[R[23]]]],[11,"clone",E,E,10,[[["self"]],[R[24]]]],[11,"clone",E,E,14,[[["self"]],[R[25]]]],[11,"clone",E,E,15,[[["self"]],[R[26]]]],[11,"clone",E,E,16,[[["self"]],[R[27]]]],[11,"clone",E,E,17,[[["self"]],[R[28]]]],[11,"clone",E,E,18,[[["self"]],[R[29]]]],[11,"clone",E,E,19,[[["self"]],[R[30]]]],[11,"clone",E,E,20,[[["self"]],[R[31]]]],[11,"clone",E,E,21,[[["self"]],[R[32]]]],[11,"clone",E,E,22,[[["self"]],[R[33]]]],[11,"clone",E,E,11,[[["self"]],[R[34]]]],[11,"clone",E,E,23,[[["self"]],["tls"]]],[11,"clone",E,E,24,[[["self"]],[R[35]]]],[11,"fmt",E,E,0,[[["self"],[R[36]]],[R[5]]]],[11,"fmt",E,E,1,[[["self"],[R[36]]],[R[5]]]],[11,"fmt",E,E,2,[[["self"],[R[36]]],[R[5]]]],[11,"fmt",E,E,3,[[["self"],[R[36]]],[R[5]]]],[11,"fmt",E,E,4,[[["self"],[R[36]]],[R[5]]]],[11,"fmt",E,E,5,[[["self"],[R[36]]],[R[5]]]],[11,"fmt",E,E,6,[[["self"],[R[36]]],[R[5]]]],[11,"fmt",E,E,7,[[["self"],[R[36]]],[R[5]]]],[11,"fmt",E,E,9,[[["self"],[R[36]]],[R[5]]]],[11,"fmt",E,E,10,[[["self"],[R[36]]],[R[5]]]],[11,"fmt",E,E,11,[[["self"],[R[36]]],[R[5]]]],[11,"fmt",E,E,23,[[["self"],[R[36]]],[R[5]]]],[11,"fmt",E,E,24,[[["self"],[R[36]]],[R[5]]]]],"p":[[3,R[14]],[3,R[15]],[3,R[37]],[3,R[16]],[3,"fd_set"],[3,R[17]],[3,R[18]],[3,R[19]],[3,R[20]],[3,R[22]],[3,R[24]],[3,R[34]],[19,R[21]],[19,R[23]],[19,R[25]],[19,R[26]],[19,R[27]],[19,R[28]],[19,R[29]],[19,R[30]],[19,R[31]],[19,R[32]],[19,R[33]],[3,"tls"],[3,R[35]]]};
searchIndex["tokio_libtls"]={"doc":"Async [`Tls`] bindings for [`libtls`].","i":[[3,R[174],R[118],"Wrapper for async I/O operations with `Tls`.",N,N],[3,"AsyncTls",E,"Async `Tls` struct.",N,N],[0,"error",E,R[117],N,N],[4,R[171],R[144],"An error returned by [`AsyncTls`].",N,N],[13,"Readable",E,"The connection is readable.",0,N],[13,"Writeable",E,"The connection is writeable.",0,N],[13,"Handshake",E,"The connection is doing a handshake.",0,N],[13,"Error",E,"A generic error.",0,N],[0,"prelude",R[118],"A \"prelude\" for crates using the `tokio-libtls` crate.",N,N],[8,"Stream",R[142],"A stream of values, not all of which may have been…",N,N],[16,"Item",E,"The type of item this stream will yield on success.",1,N],[16,"Error",E,"The type of error this stream may generate.",1,N],[10,"poll",E,"Attempt to pull out the next value of this stream,…",1,[[["self"]],[[R[5],["async"]],["async",[R[69]]]]]],[11,"wait",E,"Creates an iterator which blocks the current thread until…",1,[[],["wait"]]],[11,R[128],E,"Converts this stream into a `Future`.",1,[[],["streamfuture"]]],[11,"map",E,"Converts a stream of type `T` to a stream of type `U`.",1,[[["f"]],["map"]]],[11,"map_err",E,"Converts a stream of error type `T` to a stream of error…",1,[[["f"]],["maperr"]]],[11,"filter",E,"Filters the values produced by this stream according to…",1,[[["f"]],["filter"]]],[11,"filter_map",E,"Filters the values produced by this stream while…",1,[[["f"]],["filtermap"]]],[11,"then",E,R[119],1,[[["f"]],["then"]]],[11,"and_then",E,R[119],1,[[["f"]],["andthen"]]],[11,"or_else",E,"Chain on a computation for when an error happens, passing…",1,[[["f"]],["orelse"]]],[11,"collect",E,"Collect all of the values of this stream into a vector,…",1,[[],["collect"]]],[11,"concat2",E,R[120],1,[[],["concat2"]]],[11,"concat",E,R[120],1,[[],["concat"]]],[11,"fold",E,"Execute an accumulating computation over a stream,…",1,[[[T],["f"]],["fold"]]],[11,"flatten",E,"Flattens a stream of streams into just one continuous…",1,[[],["flatten"]]],[11,"skip_while",E,"Skip elements on this stream while the predicate provided…",1,[[["p"]],["skipwhile"]]],[11,"take_while",E,"Take elements from this stream while the predicate…",1,[[["p"]],["takewhile"]]],[11,"for_each",E,"Runs this stream to completion, executing the provided…",1,[[["f"]],["foreach"]]],[11,"from_err",E,"Map this stream's error to any error implementing `From`…",1,[[],["fromerr"]]],[11,"take",E,"Creates a new stream of at most `amt` items of the…",1,[[["u64"]],["take"]]],[11,"skip",E,"Creates a new stream which skips `amt` items of the…",1,[[["u64"]],["skip"]]],[11,"fuse",E,"Fuse a stream such that `poll` will never again be called…",1,[[],["fuse"]]],[11,"by_ref",E,"Borrows a stream, rather than consuming it.",1,[[["self"]],["self"]]],[11,R[123],E,"Catches unwinding panics while polling the stream.",1,[[],[R[124]]]],[11,"buffered",E,"An adaptor for creating a buffered list of pending futures.",1,[[["usize"]],["buffered"]]],[11,"buffer_unordered",E,"An adaptor for creating a buffered list of pending futures…",1,[[["usize"]],["bufferunordered"]]],[11,"merge",E,"An adapter for merging the output of two streams.",1,[[["s"]],["merge"]]],[11,"zip",E,"An adapter for zipping two streams together.",1,[[["s"]],["zip"]]],[11,"chain",E,"Adapter for chaining two stream.",1,[[["s"]],["chain"]]],[11,"peekable",E,"Creates a new stream which exposes a `peek` method.",1,[[],["peekable"]]],[11,"chunks",E,"An adaptor for chunking up items of the stream inside a…",1,[[["usize"]],["chunks"]]],[11,"select",E,"Creates a stream that selects the next element from either…",1,[[["s"]],["select"]]],[11,"forward",E,R[127],1,[[["s"]],["forward"]]],[11,"split",E,"Splits this `Stream + Sink` object into separate `Stream`…",1,[[]]],[11,"inspect",E,"Do something with each item of this stream, afterwards…",1,[[["f"]],["inspect"]]],[11,"inspect_err",E,"Do something with the error of this stream, afterwards…",1,[[["f"]],["inspecterr"]]],[6,"Poll",E,"Return type of the `Future::poll` method, indicates…",N,N],[8,"Future",E,"Trait for types which are a placeholder of a value that…",N,N],[16,"Item",E,"The type of value that this future will resolved with if…",2,N],[16,"Error",E,"The type of error that this future will resolve with if it…",2,N],[10,"poll",E,"Query this future to see if its value has become…",2,[[["self"]],[[R[5],["async"]],["async"]]]],[11,"wait",E,"Block the current thread until this future is resolved.",2,[[],[R[5]]]],[11,"map",E,"Map this future's result to a different type, returning a…",2,[[["f"]],["map"]]],[11,"map_err",E,"Map this future's error to a different error, returning a…",2,[[["f"]],["maperr"]]],[11,"from_err",E,"Map this future's error to any error implementing `From`…",2,[[],["fromerr"]]],[11,"then",E,"Chain on a computation for when a future finished, passing…",2,[[["f"]],["then"]]],[11,"and_then",E,"Execute another future after this one has resolved…",2,[[["f"]],["andthen"]]],[11,"or_else",E,"Execute another future if this one resolves with an error.",2,[[["f"]],["orelse"]]],[11,"select",E,"Waits for either one of two futures to complete.",2,[[["b"]],["select"]]],[11,"select2",E,"Waits for either one of two differently-typed futures to…",2,[[["b"]],["select2"]]],[11,"join",E,"Joins the result of two futures, waiting for them both to…",2,[[["b"]],["join"]]],[11,"join3",E,R[121],2,[[["c"],["b"]],["join3"]]],[11,"join4",E,R[121],2,[[["c"],["d"],["b"]],["join4"]]],[11,"join5",E,R[121],2,[[["e"],["c"],["d"],["b"]],["join5"]]],[11,"into_stream",E,"Convert this future into a single element stream.",2,[[],["intostream"]]],[11,"flatten",E,R[122],2,[[],["flatten"]]],[11,"flatten_stream",E,R[122],2,[[],["flattenstream"]]],[11,"fuse",E,"Fuse a future such that `poll` will never again be called…",2,[[],["fuse"]]],[11,"inspect",E,"Do something with the item of a future, passing it on.",2,[[["f"]],["inspect"]]],[11,R[123],E,"Catches unwinding panics while polling the future.",2,[[],[R[124]]]],[11,"shared",E,"Create a cloneable handle to this future where all handles…",2,[[],["shared"]]],[4,"Async",E,"Return type of future, indicating whether a value is ready…",N,N],[13,"Ready",E,"Represents that a value is immediately ready.",3,N],[13,"NotReady",E,"Represents that a value is not ready yet, but may be so…",3,N],[8,"Sink",E,"A `Sink` is a value into which other values can be sent,…",N,N],[16,"SinkItem",E,"The type of value that the sink accepts.",4,N],[16,"SinkError",E,"The type of value produced by the sink when an error occurs.",4,N],[10,"start_send",E,"Begin the process of sending a value to the sink.",4,[[["self"]],[[R[5],[R[125]]],[R[125]]]]],[10,"poll_complete",E,"Flush all output from this sink, if necessary.",4,[[["self"]],[[R[5],["async"]],["async"]]]],[11,"close",E,"A method to indicate that no more values will ever be…",4,[[["self"]],[[R[5],["async"]],["async"]]]],[11,"wait",E,"Creates a new object which will produce a synchronous sink.",4,[[],["wait"]]],[11,"with",E,R[126],4,[[["f"]],["with"]]],[11,"with_flat_map",E,R[126],4,[[["f"]],["withflatmap"]]],[11,"sink_map_err",E,"Transforms the error returned by the sink.",4,[[["f"]],["sinkmaperr"]]],[11,"sink_from_err",E,"Map this sink's error to any error implementing `From` for…",4,[[],["sinkfromerr"]]],[11,"buffer",E,"Adds a fixed-size buffer to the current sink.",4,[[["usize"]],["buffer"]]],[11,"fanout",E,"Fanout items to multiple sinks.",4,[[["s"]],["fanout"]]],[11,"flush",E,"A future that completes when the sink has finished…",4,[[],["flush"]]],[11,"send",E,"A future that completes after the given item has been…",4,[[],["send"]]],[11,"send_all",E,R[127],4,[[["s"]],["sendall"]]],[8,R[172],E,"Class of types which can be converted into a future.",N,N],[16,"Future",E,"The future that this type can be converted into.",5,N],[16,"Item",E,"The item that the future may resolve with.",5,N],[16,"Error",E,"The error that the future may resolve with.",5,N],[10,R[128],E,"Consumes this object and produces a future.",5,[[]]],[6,"StartSend",E,"Return type of the `Sink::start_send` method, indicating…",N,N],[4,R[173],E,"The result of an asynchronous attempt to send a value to a…",N,N],[13,"Ready",E,"The `start_send` attempt succeeded, so the sending process…",6,N],[13,"NotReady",E,"The `start_send` attempt failed due to the sink being…",6,N],[3,R[81],E,R[129],N,N],[0,"error",E,R[117],N,N],[4,R[82],R[146],R[130],N,N],[13,"CtxError",E,R[131],7,N],[13,R[132],E,R[133],7,N],[13,"IoError",E,R[134],7,N],[13,"NulError",E,R[135],7,N],[13,"NoError",E,R[136],7,N],[6,"Result",E,R[137],N,N],[8,R[83],E,R[138],N,N],[10,R[77],E,R[139],8,[[["self"]],[[R[72]],[R[141]],[R[5],[R[72],R[141]]]]]],[11,R[78],E,R[140],8,[[[R[72]]],[[R[5],[R[141]]],[R[141]]]]],[3,R[175],R[142],"An I/O object representing a TCP stream connected to a…",N,N],[6,"AsyncTlsStream",R[118],"Pollable wrapper for async I/O operations with `Tls`.",N,N],[11,"new",E,"Create new `TlsStream` from `Tls` object and `TcpStream`.",9,[[["tls"],[R[143]]],["self"]]],[11,"accept_stream",E,"Accept a new async `Tls` connection.",10,[[[R[143]],[R[44]]],["self"]]],[11,"connect_stream",E,"Connect a new async `Tls` connection.",10,[[[R[44]],["str"],[R[143]]],["self"]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[8],E,E,9,[[[U]],[R[5]]]],[11,R[9],E,E,9,[[],[R[5]]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[12],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[13]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[8],E,E,10,[[[U]],[R[5]]]],[11,R[9],E,E,10,[[],[R[5]]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[12],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[13]]]],[11,R[128],E,E,10,[[],["f"]]],[11,"into",R[144],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[145],E,E,0,[[["self"]],[R[72]]]],[11,R[8],E,E,0,[[[U]],[R[5]]]],[11,R[9],E,E,0,[[],[R[5]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[13]]]],[11,R[6],R[142],E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[8],E,E,3,[[[U]],[R[5]]]],[11,R[9],E,E,3,[[],[R[5]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[12],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[13]]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[7],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[8],E,E,6,[[[U]],[R[5]]]],[11,R[9],E,E,6,[[],[R[5]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[12],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[13]]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[7],E,E,11,[[["self"],[T]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[8],E,E,11,[[[U]],[R[5]]]],[11,R[9],E,E,11,[[],[R[5]]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[12],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[13]]]],[11,"into",R[146],E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[145],E,E,7,[[["self"]],[R[72]]]],[11,R[8],E,E,7,[[[U]],[R[5]]]],[11,R[9],E,E,7,[[],[R[5]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[12],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[13]]]],[11,"into",R[142],E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[8],E,E,12,[[[U]],[R[5]]]],[11,R[9],E,E,12,[[],[R[5]]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[12],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[13]]]],[11,"from",E,E,3,[[[T]],["async"]]],[11,"clone",E,E,3,[[["self"]],["async"]]],[11,"clone",E,E,6,[[["self"]],[R[125]]]],[11,"eq",E,E,6,[[["self"],[R[125]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[125]]],["bool"]]],[11,"eq",E,E,3,[[["self"],["async"]],["bool"]]],[11,"ne",E,E,3,[[["self"],["async"]],["bool"]]],[11,"fmt",E,E,3,[[["self"],[R[36]]],[[R[5],["error"]],["error"]]]],[11,"fmt",E,E,6,[[["self"],[R[36]]],[[R[5],["error"]],["error"]]]],[11,"clone",E,E,11,[[["self"]],[R[79]]]],[11,"source",R[146],E,7,[[["self"]],[["error"],[R[69],["error"]]]]],[11,"fmt",E,E,7,[[["self"],[R[36]]],[[R[5],["error"]],["error"]]]],[11,"default",R[142],E,11,[[],[R[79]]]],[11,"from",R[146],E,7,[[[R[147]]],[R[141]]]],[11,"from",E,E,7,[[["error"]],[R[141]]]],[11,"from",E,E,7,[[["nulerror"]],[R[141]]]],[11,"fmt",E,E,7,[[["self"],[R[36]]],[[R[5],["error"]],["error"]]]],[11,"fmt",R[142],E,11,[[["self"],[R[36]]],[[R[5],["error"]],["error"]]]],[11,R[148],E,E,12,[[["self"]],["i32"]]],[11,"read",E,E,12,[[["self"]],[["error"],["usize"],[R[5],["usize","error"]]]]],[11,R[169],E,E,12,[[["self"]],[["async"],["error"],[R[5],["async","error"]]]]],[11,"write_buf",E,E,12,[[["self"],["b"]],[[R[5],["async","error"]],["async",["usize"]],["error"]]]],[11,"prepare_uninitialized_buffer",E,E,12,[[["self"]],["bool"]]],[11,"read_buf",E,E,12,[[["self"],["b"]],[[R[5],["async","error"]],["async",["usize"]],["error"]]]],[11,"write",E,E,12,[[["self"]],[["error"],["usize"],[R[5],["usize","error"]]]]],[11,"flush",E,E,12,[[["self"]],[[R[5],["error"]],["error"]]]],[11,"fmt",E,E,12,[[["self"],[R[36]]],[[R[5],["error"]],["error"]]]],[11,"from",R[144],E,0,[[[R[141]]],["self"]]],[11,"from",E,E,0,[[["error"]],["self"]]],[11,"deref_mut",R[118],E,9,[[["self"]]]],[11,"deref",E,E,9,[[["self"]]]],[11,"fmt",R[144],E,0,[[["self"],[R[36]]],[R[5]]]],[11,"fmt",R[118],E,9,[[["self"],[R[36]]],[R[5]]]],[11,"fmt",R[144],E,0,[[["self"],[R[36]]],[R[5]]]],[11,"source",E,E,0,[[["self"]],[["error"],[R[69],["error"]]]]],[11,"read",R[118],E,9,[[["self"]],[[R[5],["usize"]],["usize"]]]],[11,"write",E,E,9,[[["self"]],[[R[5],["usize"]],["usize"]]]],[11,"flush",E,E,9,[[["self"]],[R[5]]]],[11,R[148],E,E,9,[[["self"]],["rawfd"]]],[11,"poll",E,E,10,[[["self"]],[["poll",[R[149]]],[R[149]]]]],[11,"register",E,E,9,[[["self"],["token"],["ready"],["pollopt"],["poll"]],[R[5]]]],[11,"reregister",E,E,9,[[["self"],["token"],["ready"],["pollopt"],["poll"]],[R[5]]]],[11,"deregister",E,E,9,[[["self"],["poll"]],[R[5]]]],[11,R[169],E,E,9,[[["self"]],[["error"],["poll",["error"]]]]],[11,"map",R[142],"Change the success value of this `Async` with the closure…",3,[[["f"]],["async"]]],[11,"is_ready",E,"Returns whether this is `Async::Ready`",3,[[["self"]],["bool"]]],[11,R[150],E,"Returns whether this is `Async::NotReady`",3,[[["self"]],["bool"]]],[11,"map",E,"Change the NotReady value of this `AsyncSink` with the…",6,[[["f"]],[R[125]]]],[11,"is_ready",E,"Returns whether this is `AsyncSink::Ready`",6,[[["self"]],["bool"]]],[11,R[150],E,"Returns whether this is `AsyncSink::NotReady`",6,[[["self"]],["bool"]]],[11,"new",E,R[151],11,[[],[R[79]]]],[11,"build",E,R[152],11,[[["self"]],[[R[5],[R[44],R[141]]],[R[44]],[R[141]]]]],[11,"client",E,R[45],11,[[["self"]],[[R[141]],["tls"],[R[5],["tls",R[141]]]]]],[11,"server",E,R[45],11,[[["self"]],[[R[141]],["tls"],[R[5],["tls",R[141]]]]]],[11,"alpn",E,R[46],11,[[["self"],["str"]],[R[79]]]],[11,"ca_file",E,R[47],11,[[["self"],["p"]],[R[79]]]],[11,"ca_path",E,R[153],11,[[["self"],["p"]],[R[79]]]],[11,"ca_mem",E,R[48],11,[[["self"]],[R[79]]]],[11,"ciphers",E,R[49],11,[[["self"],["str"]],[R[79]]]],[11,"crl_file",E,R[50],11,[[["self"],["p"]],[R[79]]]],[11,"crl_mem",E,R[51],11,[[["self"]],[R[79]]]],[11,R[154],E,R[52],11,[[["self"],["str"]],[R[79]]]],[11,R[155],E,R[53],11,[[["self"],["str"]],[R[79]]]],[11,R[156],E,R[54],11,[[["self"],[R[69]],["p"]],[R[79]]]],[11,R[157],E,R[55],11,[[["self"],[R[69]]],[R[79]]]],[11,R[158],E,R[56],11,[[["self"]],[R[79]]]],[11,R[159],E,R[57],11,[[["self"]],[R[79]]]],[11,R[160],E,R[58],11,[[["self"]],[R[79]]]],[11,R[161],E,R[59],11,[[["self"],["u32"]],[R[79]]]],[11,R[162],E,R[60],11,[[["self"],["i32"]],[R[79]]]],[11,R[163],E,R[61],11,[[["self"]],[R[79]]]],[11,R[164],E,R[62],11,[[["self"],["usize"]],[R[79]]]],[11,R[165],E,"See also",11,[[["self"],["u32"]],[R[79]]]],[11,"verify",E,R[63],11,[[["self"]],[R[79]]]],[11,R[64],E,R[65],11,[[["self"]],[R[79]]]],[11,R[66],E,R[67],11,[[["self"]],[R[79]]]],[11,R[166],E,R[68],11,[[["self"],["usize"]],[R[79]]]],[11,"connect",E,"Create a new TCP stream connected to the specified address.",12,[[[R[167]]],[R[168]]]],[11,"from_std",E,"Create a new `TcpStream` from a `net::TcpStream`.",12,[[[R[143]],["handle"]],[[R[5],[R[143],"error"]],["error"],[R[143]]]]],[11,"connect_std",E,"Creates a new `TcpStream` from the pending socket inside…",12,[[[R[143]],["handle"],[R[167]]],[R[168]]]],[11,"poll_read_ready",E,"Check the TCP stream's read readiness state.",12,[[["self"],["ready"]],[[R[5],["async","error"]],["async",["ready"]],["error"]]]],[11,"poll_write_ready",E,"Check the TCP stream's write readiness state.",12,[[["self"]],[[R[5],["async","error"]],["async",["ready"]],["error"]]]],[11,"local_addr",E,"Returns the local address that this stream is bound to.",12,[[["self"]],[[R[167]],[R[5],[R[167],"error"]],["error"]]]],[11,"peer_addr",E,"Returns the remote address that this stream is connected…",12,[[["self"]],[[R[167]],[R[5],[R[167],"error"]],["error"]]]],[11,"poll_peek",E,"Receives data on the socket from the remote address to…",12,[[["self"]],[[R[5],["async","error"]],["async",["usize"]],["error"]]]],[11,R[169],E,"Shuts down the read, write, or both halves of this…",12,[[["self"],[R[169]]],[[R[5],["error"]],["error"]]]],[11,"nodelay",E,"Gets the value of the `TCP_NODELAY` option on this socket.",12,[[["self"]],[[R[5],["bool","error"]],["error"],["bool"]]]],[11,"set_nodelay",E,"Sets the value of the `TCP_NODELAY` option on this socket.",12,[[["self"],["bool"]],[[R[5],["error"]],["error"]]]],[11,"recv_buffer_size",E,"Gets the value of the `SO_RCVBUF` option on this socket.",12,[[["self"]],[["error"],["usize"],[R[5],["usize","error"]]]]],[11,"set_recv_buffer_size",E,"Sets the value of the `SO_RCVBUF` option on this socket.",12,[[["self"],["usize"]],[[R[5],["error"]],["error"]]]],[11,"send_buffer_size",E,"Gets the value of the `SO_SNDBUF` option on this socket.",12,[[["self"]],[["error"],["usize"],[R[5],["usize","error"]]]]],[11,"set_send_buffer_size",E,"Sets the value of the `SO_SNDBUF` option on this socket.",12,[[["self"],["usize"]],[[R[5],["error"]],["error"]]]],[11,"keepalive",E,"Returns whether keepalive messages are enabled on this…",12,[[["self"]],[[R[5],[R[69],"error"]],[R[69],[R[170]]],["error"]]]],[11,"set_keepalive",E,"Sets whether keepalive messages are enabled to be sent on…",12,[[["self"],[R[69],[R[170]]],[R[170]]],[[R[5],["error"]],["error"]]]],[11,"ttl",E,"Gets the value of the `IP_TTL` option for this socket.",12,[[["self"]],[["u32"],["error"],[R[5],["u32","error"]]]]],[11,"set_ttl",E,"Sets the value for the `IP_TTL` option on this socket.",12,[[["self"],["u32"]],[[R[5],["error"]],["error"]]]],[11,"linger",E,"Reads the linger duration for this socket by getting the…",12,[[["self"]],[[R[5],[R[69],"error"]],[R[69],[R[170]]],["error"]]]],[11,"set_linger",E,"Sets the linger duration of this socket by setting the…",12,[[["self"],[R[69],[R[170]]],[R[170]]],[[R[5],["error"]],["error"]]]]],"p":[[4,R[171]],[8,"Stream"],[8,"Future"],[4,"Async"],[8,"Sink"],[8,R[172]],[4,R[173]],[4,R[82]],[8,R[83]],[3,R[174]],[3,"AsyncTls"],[3,R[81]],[3,R[175]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);